version: '3.8'

services:

  containerserverconfig:
    restart: always
    container_name: containerserverconfig
    image: emmanuelh11/configservertravel:1
    ports: 
      - "8084:8084"
    networks:
      - besttravelnetwork

  sql-db:
    image: postgres:15.2
    networks:
      - besttravelnetwork
    container_name: best_travel_schema
    restart: always
    volumes:
      - ./db/sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./db/sql/data.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      - POSTGRES_DB=best_travel
      - POSTGRES_USER=emmanuel
      - POSTGRES_PASSWORD=emmanueltravel
    ports:
      - "5432:5432"
    depends_on:
      - containerserverconfig

  cache-db:
    image: redis:6.2-alpine
    networks:
      - besttravelnetwork
    container_name: best_travel_cache
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning --requirepass debuggeandoideas
    depends_on:
      - containerserverconfig

  document-db:
    image: mongo:6.0.4
    networks:
      - besttravelnetwork
    restart: always
    container_name: best_travel_users
    environment:
      MONGO_INITDB_ROOT_USERNAME: emmanuel
      MONGO_INITDB_ROOT_PASSWORD: emmanueltravel
      MONGO_INITDB_DATABASE: users
    ports:
      - "27017:27017"
    volumes:
      - ./db/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    depends_on:
      - containerserverconfig
      
  containermicrobesttravel:
    container_name: containermicrobesttravel
    image: emmanuelh11/microbesttravel:1
    restart: always
    ports:
      - "8080:8080"
    links:
      - containerserverconfig
      - cache-db
      - sql-db
      - document-db
    networks:
      - besttravelnetwork
    depends_on:
      - containerserverconfig
networks:
  besttravelnetwork:
    driver: bridge